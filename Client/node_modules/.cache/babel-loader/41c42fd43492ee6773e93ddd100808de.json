{"ast":null,"code":"var _jsxFileName = \"/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\nimport UploadMetadata from \"./UploadMetadata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar transferValue = null;\n\nfunction ContractInteraction(props) {\n  _s();\n\n  const [accounts, setAccounts] = useState([]); //state variable for accounts\n\n  const [web3, setWeb3] = useState(undefined); //web3 state\n\n  const [contract, setContract] = useState(undefined); //contract state\n\n  const [uri, setUri] = useState(undefined); //Uri code State\n\n  const [tokenID, setTokenID] = useState(undefined); //Token ID state\n\n  const [tokenExists, setTokenExists] = useState(false); //Triggers Token UI response on and off\n\n  const [reciever, setReciever] = useState(undefined);\n  const [url, setUrl] = useState(undefined); //Metadata URL state\n\n  const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n\n  const [account, setAccount] = useState(false); //Switch for accounts connection status\n\n  const [connectionStatus, setConnectionStatus] = useState(false);\n  const [id, setID] = useState(undefined);\n  const [cid, setCid] = useState(props.showCIDs);\n  const [owner, setOwner] = useState(undefined);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting ID: ${tokenID}`);\n    setCid(props.showCIDs);\n    console.log(props.showCIDs);\n    console.log(tokenID);\n    RetrieveTokenURL(tokenID);\n  };\n\n  const handleChange = e => {\n    setTokenID(e.target.value);\n  };\n\n  async function init() {\n    try {\n      const uri = await props.CIDkey;\n      const tokenID = await props.tokenIDs;\n      const web3 = await new Web3(window.ethereum);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = MusicOwnership.networks[networkId];\n      const contract = await new web3.eth.Contract(MusicOwnership.abi, deployedNetwork && deployedNetwork.address);\n      console.log(contract);\n      await setUri(uri);\n      await setWeb3(web3);\n      await setAccounts(accounts);\n      await setContract(contract);\n      console.log(tokenID);\n      console.log(uri);\n      setAccount(true);\n    } catch (error) {\n      alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n      console.error(error);\n    }\n  }\n\n  async function Mint() {\n    if (uri === undefined || tokenID === undefined) {\n      alert('please ensure a file first and that you have entered a numerical Identification number');\n      throw 'please ensure a file is submitted first and that you have entered a numerical Identification number';\n    }\n\n    let checkID = await contract.methods.tokenURI(tokenID).call();\n\n    if (checkID = !null) {\n      alert('This ID number has been taken, please try a different number');\n      throw 'This ID number has been taken, please try a different number';\n    }\n\n    await contract.methods.mint(accounts[0], uri, tokenID).send({\n      from: accounts[0],\n      gas: 1000000\n    });\n  }\n\n  if (typeof web3 !== 'undefined' && typeof accounts !== 'undefined' && typeof contract !== 'undefined') {}\n\n  async function RetrieveTokenURL() {\n    if (tokenID === undefined) {\n      alert('please enter a numerical Identification number');\n      throw 'please enter a numerical Identification number';\n    }\n\n    try {\n      const url = await contract.methods.tokenURI(tokenID).call();\n      setUrl(url);\n      console.log(JSON.stringify(url));\n      const owner = await contract.methods.ownerOf(tokenID).call();\n      setOwner(owner);\n      setTokenExists(true);\n    } catch (error) {\n      setDoesntExist('This Token ID does not exit');\n      setTokenExists(false);\n    }\n  }\n\n  async function configureAndConnectMetamask() {\n    const provider = await detectEthereumProvider({\n      mustBeMetaMask: true\n    });\n\n    if (provider) {\n      try {\n        await provider.request({\n          method: 'eth_requestAccounts'\n        });\n        await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: '0x3',\n            chainName: 'Ropsten',\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'ETH',\n              decimals: 18\n            },\n            rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n            blockExplorerUrls: ['https://ropsten.etherscan.io']\n          }]\n        });\n      } catch (e) {\n        console.error(e);\n        setConnectionStatus(true);\n      }\n    } else {\n      console.error('Please install MetaMask');\n      alert('Please install the MetaMask wallet extension in Chrome or Brave Browser');\n    }\n\n    await init();\n  }\n\n  const handleRecieverSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting ID: ${reciever}`);\n    setReciever(reciever);\n    TransferToken();\n  };\n\n  const handleRecieverChange = e => {\n    setReciever(e.target.value);\n  };\n\n  async function TransferToken() {\n    if (reciever == null) {\n      throw 'Enter an address to send the token to';\n      alert('Enter an address to send the token to');\n    }\n\n    await contract.methods.transfer(reciever, accounts[0], tokenID).send({\n      from: accounts[0],\n      gas: 1000000\n    });\n    alert('tokentrasfered');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"3. Connect To Your Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => configureAndConnectMetamask(),\n        children: \"Connect to Ropsten \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 8\n    }, this), connectionStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Account:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" \", accounts[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"NotConnected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"4.Enter a TokenID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenID,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: [tokenExists ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Token \", tokenID, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [url, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Owner of token \", tokenID, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: doesntExist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" 5. Mint Your Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Mint(),\n          children: \" Mint Token \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => TransferToken(),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transfer Ownership\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"string\",\n        value: reciever,\n        onChange: handleRecieverChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContractInteraction, \"rrEzNY++bldcawALf+F7NIl3KAE=\");\n\n_c = ContractInteraction;\nexport default ContractInteraction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractInteraction\");","map":{"version":3,"sources":["/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js"],"names":["React","useState","Component","MusicOwnership","Web3","detectEthereumProvider","styles","UploadMetadata","transferValue","ContractInteraction","props","accounts","setAccounts","web3","setWeb3","undefined","contract","setContract","uri","setUri","tokenID","setTokenID","tokenExists","setTokenExists","reciever","setReciever","url","setUrl","doesntExist","setDoesntExist","account","setAccount","connectionStatus","setConnectionStatus","id","setID","cid","setCid","showCIDs","owner","setOwner","handleSubmit","evt","preventDefault","alert","console","log","RetrieveTokenURL","handleChange","e","target","value","init","CIDkey","tokenIDs","window","ethereum","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","error","Mint","checkID","methods","tokenURI","call","mint","send","from","gas","JSON","stringify","ownerOf","configureAndConnectMetamask","provider","mustBeMetaMask","request","method","params","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","handleRecieverSubmit","TransferToken","handleRecieverChange","transfer","column"],"mappings":"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","sourcesContent":["import React, {useState,Component} from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\nimport UploadMetadata from \"./UploadMetadata\";\n\nvar transferValue = null; \n\n\n  function ContractInteraction (props) {\n    const [accounts, setAccounts] = useState([]); //state variable for accounts\n    const [web3, setWeb3] = useState (undefined); //web3 state\n    const [contract, setContract] = useState (undefined); //contract state\n    const [uri, setUri] = useState (undefined); //Uri code State\n    const [tokenID, setTokenID] = useState (undefined); //Token ID state\n    const [tokenExists, setTokenExists] = useState (false); //Triggers Token UI response on and off\n    const [reciever,setReciever ] = useState (undefined);\n    const [url, setUrl] = useState (undefined); //Metadata URL state\n    const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n    const [account, setAccount] = useState(false); //Switch for accounts connection status\n    const [connectionStatus, setConnectionStatus] = useState(false);\n    const [id, setID] = useState(undefined);\n    const [cid, setCid] =useState(props.showCIDs);\n    const [owner, setOwner] = useState(undefined);\n    \n\n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      alert(`Submitting ID: ${tokenID}`)\n      setCid(props.showCIDs);\n      console.log(props.showCIDs);\n      console.log(tokenID);\n      RetrieveTokenURL(tokenID);\n    }\n    const handleChange = (e) => {\n    setTokenID(e.target.value)\n    }\n    \n    async function init() {\n             \n      try {\n          const uri = await (props.CIDkey); \n          const tokenID = await (props.tokenIDs);   \n          const  web3 = await new Web3(window.ethereum);\n          const accounts = await  web3.eth.getAccounts();\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = MusicOwnership.networks[networkId];\n          const contract = await new web3.eth.Contract(\n          MusicOwnership.abi,\n          deployedNetwork && deployedNetwork.address\n          );\n          console.log(contract)\n          await setUri(uri);\n          await setWeb3(web3);\n          await setAccounts(accounts);\n          await setContract(contract);\n          console.log(tokenID);\n          console.log(uri);\n          setAccount(true)\n          }\n\n      catch (error) {\n        alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n        console.error(error);\n      }\n    }\n    \n    \n        async function Mint() {\n            if (uri === undefined || tokenID === undefined) {\n                alert('please ensure a file first and that you have entered a numerical Identification number');\n                throw('please ensure a file is submitted first and that you have entered a numerical Identification number');\n            }\n            let checkID = await contract.methods.tokenURI(tokenID).call();\n\n              if (checkID =! null)\n            {\n              alert('This ID number has been taken, please try a different number');\n              throw('This ID number has been taken, please try a different number');\n            }\n           \n            await contract.methods.mint(accounts[0],uri,tokenID).send({from:accounts[0], gas: 1000000});\n            }\n    \n            if(typeof web3 !== 'undefined'\n               && typeof accounts !== 'undefined'\n               && typeof contract !== 'undefined') {\n            }\n\n            async function RetrieveTokenURL() {\n            if (tokenID === undefined)\n            {\n              alert('please enter a numerical Identification number');\n              throw('please enter a numerical Identification number');\n            }\n            \n            try{\n               const url = await contract.methods.tokenURI(tokenID).call();\n              setUrl(url);\n              console.log(JSON.stringify(url));\n              const owner = await contract.methods.ownerOf(tokenID).call();\n              setOwner(owner);\n              setTokenExists(true);\n            }\n            catch(error)\n            {\n            setDoesntExist('This Token ID does not exit');\n            setTokenExists(false);\n            }\n          }\n\n            async function configureAndConnectMetamask() {\n                const provider = await detectEthereumProvider({\n                  mustBeMetaMask: true\n                })\n                if (provider) {\n                  try {\n                    await provider.request({ method: 'eth_requestAccounts'})\n                    await provider.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [{\n                        chainId: '0x3', \n                        chainName: 'Ropsten',\n                        nativeCurrency: {\n                          name: 'ETH',\n                          symbol: 'ETH',\n                          decimals: 18\n                         },\n                        rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n                        blockExplorerUrls: ['https://ropsten.etherscan.io']\n                      }]\n                    }\n                    )\n                  } catch(e) {\n                    console.error(e);\n                    setConnectionStatus(true);\n                  }  \n                } else {\n                  console.error('Please install MetaMask');\n                  alert('Please install the MetaMask wallet extension in Chrome or Brave Browser');\n                }\n                await init();\n              }\n                  \n              const handleRecieverSubmit = (evt) => {\n                evt.preventDefault();\n                alert(`Submitting ID: ${reciever}`)\n                setReciever(reciever);\n                TransferToken()\n              }\n              const handleRecieverChange = (e) => {\n              setReciever(e.target.value)\n              }\n              \n              async function TransferToken()\n              {\n                if (reciever == null)\n                {\n                  throw('Enter an address to send the token to')\n                  alert('Enter an address to send the token to')\n                }\n                await contract.methods.transfer(reciever, accounts[0],tokenID).send({from:accounts[0], gas: 1000000});\n\n                alert('tokentrasfered');\n              }\n  return (\n    <div>\n      <h2>3. Connect To Your Wallet</h2>\n       <div> \n          <button onClick={() => configureAndConnectMetamask() }>Connect to Ropsten </button>\n        </div>\n        {connectionStatus ? (\n        <div> \n          <h3>Account:</h3>\n          <h5> {accounts[0]}</h5>\n        </div>) : (<h4>NotConnected</h4>)}\n\n      <form onSubmit= {handleSubmit}>\n        <h2>4.Enter a TokenID:</h2>\n        <input\n        type=\"number\"\n        value={tokenID}\n        onChange= {handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <div className={styles.column}>\n       \n        {tokenExists ? (\n          <div>\n        <p> \n          <h3>Token {tokenID}:</h3> <h5>{url} </h5>\n        </p>\n        <p> \n        <h4>Owner of token {tokenID}:</h4> <h5>{owner}</h5>\n        </p>\n        </div>\n        ) : (\n          <p>\n          <h4>{doesntExist}</h4>\n        </p>\n        )}\n\n        <div> \n          <h2> 5. Mint Your Token</h2>\n          <button onClick = {() => Mint()}> Mint Token </button>\n        </div>\n        </div>\n\n        <form onSubmit= {() => TransferToken()}> \n        <h2>Transfer Ownership</h2>\n        <input\n        type=\"string\"\n        value={reciever}\n        onChange= {handleRecieverChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      </div>\n\n  );\n}\nexport default ContractInteraction"]},"metadata":{},"sourceType":"module"}