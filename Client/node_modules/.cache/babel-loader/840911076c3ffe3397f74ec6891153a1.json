{"ast":null,"code":"var _jsxFileName = \"/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\nimport UploadMetadata from \"./UploadMetadata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar transferValue = null;\n\nfunction ContractInteraction(props) {\n  _s();\n\n  const [accounts, setAccounts] = useState([]); //state variable for accounts\n\n  const [web3, setWeb3] = useState(undefined); //wbe3 state\n\n  const [contract, setContract] = useState(undefined); //contract state\n\n  const [uri, setUri] = useState(undefined); //Uri code State\n\n  const [tokenID, setTokenID] = useState(undefined); //Token ID state\n\n  const [tokenExists, setTokenExists] = useState(false); //Triggers Token UI response on and off\n\n  const [url, setUrl] = useState(undefined); //Metadata URL state\n\n  const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n\n  const [account, setAccount] = useState(false); //Switch for accounts connection status\n\n  const [connectionStatus, setConnectionStatus] = useState(false);\n  const [id, setID] = useState(undefined);\n  const [cid, setCid] = useState(props.showCIDs);\n  const [owner, setOwner] = useState(undefined);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting Name ${tokenID}`);\n    setCid(props.showCIDs);\n    console.log(props.showCIDs);\n    console.log(tokenID);\n    RetrieveTokenURL(tokenID);\n  };\n\n  const handleChange = e => {\n    setTokenID(e.target.value);\n  };\n\n  async function init() {\n    try {\n      const uri = await props.CIDkey;\n      const tokenID = await props.tokenIDs;\n      const web3 = await new Web3(window.ethereum);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = MusicOwnership.networks[networkId];\n      const contract = await new web3.eth.Contract(MusicOwnership.abi, deployedNetwork && deployedNetwork.address);\n      console.log(contract);\n      await setUri(uri);\n      await setWeb3(web3);\n      await setAccounts(accounts);\n      await setContract(contract);\n      console.log(tokenID);\n      console.log(uri);\n      setAccount(true);\n    } catch (error) {\n      alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n      console.error(error);\n    }\n  }\n\n  async function Mint() {\n    if (uri === undefined || tokenID === undefined) {\n      alert('please ensure a file first and that you have entered a numerical Identification number');\n      throw 'please ensure a file first and that you have entered a numerical Identification number';\n    }\n\n    let checkID = await contract.methods.tokenURI(tokenID).call();\n\n    if (checkID = !null) {\n      alert('This ID number has been taken, please try a different number');\n      throw 'This ID number has been taken, please try a different number';\n    }\n\n    await contract.methods.mint(accounts[0], uri, tokenID).send({\n      from: accounts[0],\n      gas: 1000000\n    });\n  }\n\n  if (typeof web3 !== 'undefined' && typeof accounts !== 'undefined' && typeof contract !== 'undefined') {}\n\n  async function RetrieveTokenURL() {\n    if (tokenID === undefined) {\n      alert('please enter a numerical Identification number');\n      throw 'please enter a numerical Identification number';\n    }\n\n    try {\n      const url = await contract.methods.tokenURI(tokenID).call();\n      setUrl(url);\n      console.log(JSON.stringify(url));\n      const owner = await contract.methods.ownerOf(tokenID).call();\n      setOwner(owner);\n      setTokenExists(true);\n    } catch (error) {\n      setDoesntExist('This Token ID does not exit');\n      setTokenExists(false);\n    }\n  }\n\n  async function configureAndConnectMetamask() {\n    const provider = await detectEthereumProvider({\n      mustBeMetaMask: true\n    });\n\n    if (provider) {\n      try {\n        await provider.request({\n          method: 'eth_requestAccounts'\n        });\n        await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: '0x3',\n            chainName: 'Ropsten',\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'ETH',\n              decimals: 18\n            },\n            rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n            blockExplorerUrls: ['https://ropsten.etherscan.io']\n          }]\n        });\n      } catch (e) {\n        console.error(e);\n        setConnectionStatus(true);\n      }\n    } else {\n      console.error('Please install MetaMask');\n      alert('Please install the MetaMask wallet extension in Chrome or Brave Browser');\n    }\n\n    await init();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"3. Connect To Your Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => configureAndConnectMetamask(),\n        children: \"Connect to Ropsten \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 8\n    }, this), connectionStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Account:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" \", accounts[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"NotConnected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"4.Enter a TokenID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenID,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: [tokenExists ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Token \", tokenID, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [url, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Owner of token \", tokenID, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 9\n          }, this), \" \", owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: doesntExist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" 6. Mint Your Token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Mint(),\n          children: \" Mint Token \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContractInteraction, \"yZ8YmQa6gSMYHY7oc12LOHruboI=\");\n\n_c = ContractInteraction;\nexport default ContractInteraction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractInteraction\");","map":{"version":3,"sources":["/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js"],"names":["React","useState","Component","MusicOwnership","Web3","detectEthereumProvider","styles","UploadMetadata","transferValue","ContractInteraction","props","accounts","setAccounts","web3","setWeb3","undefined","contract","setContract","uri","setUri","tokenID","setTokenID","tokenExists","setTokenExists","url","setUrl","doesntExist","setDoesntExist","account","setAccount","connectionStatus","setConnectionStatus","id","setID","cid","setCid","showCIDs","owner","setOwner","handleSubmit","evt","preventDefault","alert","console","log","RetrieveTokenURL","handleChange","e","target","value","init","CIDkey","tokenIDs","window","ethereum","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","error","Mint","checkID","methods","tokenURI","call","mint","send","from","gas","JSON","stringify","ownerOf","configureAndConnectMetamask","provider","mustBeMetaMask","request","method","params","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","column"],"mappings":"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","sourcesContent":["import React, {useState,Component} from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\nimport UploadMetadata from \"./UploadMetadata\";\n\nvar transferValue = null; \n\n\n\n  function ContractInteraction (props) {\n    const [accounts, setAccounts] = useState([]); //state variable for accounts\n    const [web3, setWeb3] = useState (undefined); //wbe3 state\n    const [contract, setContract] = useState (undefined); //contract state\n    const [uri, setUri] = useState (undefined); //Uri code State\n    const [tokenID, setTokenID] = useState (undefined); //Token ID state\n    const [tokenExists, setTokenExists] = useState (false); //Triggers Token UI response on and off\n    const [url, setUrl] = useState (undefined); //Metadata URL state\n    const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n    const [account, setAccount] = useState(false); //Switch for accounts connection status\n    const [connectionStatus, setConnectionStatus] = useState(false);\n    const [id, setID] = useState(undefined);\n    const [cid, setCid] =useState(props.showCIDs);\n    const [owner, setOwner] = useState(undefined);\n    \n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      alert(`Submitting Name ${tokenID}`)\n      setCid(props.showCIDs);\n      console.log(props.showCIDs);\n      console.log(tokenID);\n      RetrieveTokenURL(tokenID);\n    }\n    const handleChange = (e) => {\n    setTokenID(e.target.value)\n    }\n    \n    async function init() {\n             \n      try {\n          const uri = await (props.CIDkey); \n          const tokenID = await (props.tokenIDs);   \n          const  web3 = await new Web3(window.ethereum);\n          const accounts = await  web3.eth.getAccounts();\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = MusicOwnership.networks[networkId];\n          const contract = await new web3.eth.Contract(\n          MusicOwnership.abi,\n          deployedNetwork && deployedNetwork.address\n          );\n          console.log(contract)\n          await setUri(uri);\n          await setWeb3(web3);\n          await setAccounts(accounts);\n          await setContract(contract);\n          console.log(tokenID);\n          console.log(uri);\n          setAccount(true)\n          }\n\n      catch (error) {\n        alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n        console.error(error);\n      }\n    }\n    \n    \n        async function Mint() {\n            if (uri === undefined || tokenID === undefined) {\n                alert('please ensure a file first and that you have entered a numerical Identification number');\n                throw('please ensure a file first and that you have entered a numerical Identification number');\n            }\n            let checkID = await contract.methods.tokenURI(tokenID).call();\n\n              if (checkID =! null)\n            {\n              alert('This ID number has been taken, please try a different number');\n              throw('This ID number has been taken, please try a different number');\n            }\n           \n            await contract.methods.mint(accounts[0],uri,tokenID).send({from:accounts[0], gas: 1000000});\n            }\n    \n            if(typeof web3 !== 'undefined'\n               && typeof accounts !== 'undefined'\n               && typeof contract !== 'undefined') {\n            }\n\n            async function RetrieveTokenURL() {\n            if (tokenID === undefined)\n            {\n              alert('please enter a numerical Identification number');\n              throw('please enter a numerical Identification number');\n            }\n            \n            try{\n               const url = await contract.methods.tokenURI(tokenID).call();\n              setUrl(url);\n              console.log(JSON.stringify(url));\n              const owner = await contract.methods.ownerOf(tokenID).call();\n              setOwner(owner);\n              setTokenExists(true);\n            }\n            catch(error)\n            {\n            setDoesntExist('This Token ID does not exit');\n            setTokenExists(false);\n            }\n          }\n\n            async function configureAndConnectMetamask() {\n                const provider = await detectEthereumProvider({\n                  mustBeMetaMask: true\n                })\n                if (provider) {\n                  try {\n                    await provider.request({ method: 'eth_requestAccounts'})\n                    await provider.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [{\n                        chainId: '0x3', \n                        chainName: 'Ropsten',\n                        nativeCurrency: {\n                          name: 'ETH',\n                          symbol: 'ETH',\n                          decimals: 18\n                         },\n                        rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n                        blockExplorerUrls: ['https://ropsten.etherscan.io']\n                      }]\n                    }\n                    )\n                  } catch(e) {\n                    console.error(e);\n                    setConnectionStatus(true);\n                  }  \n                } else {\n                  console.error('Please install MetaMask');\n                  alert('Please install the MetaMask wallet extension in Chrome or Brave Browser');\n                }\n                await init();\n              }\n                  \n\n  return (\n    <div>\n      <h2>3. Connect To Your Wallet</h2>\n       <div> \n          <button onClick={() => configureAndConnectMetamask() }>Connect to Ropsten </button>\n        </div>\n        {connectionStatus ? (\n        <div> \n          <h3>Account:</h3>\n          <h5> {accounts[0]}</h5>\n        </div>) : (<h3>NotConnected</h3>)}\n\n      <form onSubmit= {handleSubmit}>\n        <h2>4.Enter a TokenID:</h2>\n        <input\n        type=\"number\"\n        value={tokenID}\n        onChange= {handleChange}\n        />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n\n      <div className={styles.column}>\n       \n        {tokenExists ? (\n          <div>\n        <p> \n          <h3>Token {tokenID}:</h3> <h5>{url} </h5>\n        </p>\n        <p> \n        <h4>Owner of token {tokenID}:</h4> {owner}\n        </p>\n        </div>\n        ) : (\n          <p>\n          {doesntExist}\n        </p>\n        )}\n\n        <div> \n          <h2> 6. Mint Your Token</h2>\n          <button onClick = {() => Mint()}> Mint Token </button>\n        </div>\n        </div>\n      </div>\n\n  );\n}\nexport default ContractInteraction"]},"metadata":{},"sourceType":"module"}