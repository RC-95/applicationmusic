{"ast":null,"code":"var _jsxFileName = \"/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\nimport UploadMetadata from \"./UploadMetadata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar transferValue = null;\n\nfunction ContractInteraction(props) {\n  _s();\n\n  const [accounts, setAccounts] = useState([]); //state variable for accounts\n\n  const [web3, setWeb3] = useState(undefined); //wbe3 state\n\n  const [contract, setContract] = useState(undefined); //contract state\n\n  const [uri, setUri] = useState(undefined); //Uri code State\n\n  const [tokenID, setTokenID] = useState(undefined); //Token ID state\n\n  const [url, setUrl] = useState(undefined); //Metadata URL state\n\n  const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n\n  const [account, setAccount] = useState(false); //Switch for accounts connection status\n\n  const [connectionStatus, setConnectionStatus] = useState(false);\n  const [id, setID] = useState(undefined);\n  const [cid, setCid] = useState(props.showCIDs);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`Submitting Name ${tokenID}`);\n    setCid(props.showCIDs);\n    console.log(props.showCIDs);\n    console.log(id);\n  };\n\n  const handleChange = e => {\n    setTokenID(e.target.value);\n  };\n\n  async function init() {\n    try {\n      const uri = await props.CIDkey;\n      const tokenID = await props.tokenIDs;\n      const web3 = await new Web3(window.ethereum);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = MusicOwnership.networks[networkId];\n      const contract = await new web3.eth.Contract(MusicOwnership.abi, deployedNetwork && deployedNetwork.address);\n      console.log(contract);\n      await setUri(uri);\n      await setTokenID(tokenID);\n      await setWeb3(web3);\n      await setAccounts(accounts);\n      await setContract(contract);\n      console.log(tokenID);\n      console.log(uri);\n      setAccount(true);\n    } catch (error) {\n      alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n      console.error(error);\n    }\n  }\n\n  async function Mint() {\n    if (uri === undefined || tokenID === undefined) {\n      alert('please ensure a file first and that you have entered a numerical Identification number');\n      throw 'please ensure a file first and that you have entered a numerical Identification number';\n    }\n\n    let checkID = await contract.methods.tokenURI(tokenID).call();\n\n    if (checkID = !null) {\n      alert('This ID number has been taken, please try a different number');\n      throw 'This ID number has been taken, please try a different number';\n    }\n\n    await contract.methods.mint(accounts[0], uri, tokenID).send({\n      from: accounts[0],\n      gas: 1000000\n    });\n  }\n\n  if (typeof web3 !== 'undefined' && typeof accounts !== 'undefined' && typeof contract !== 'undefined') {}\n\n  async function RetrieveTokenURL() {\n    if (tokenID === undefined) {\n      alert('please enter a numerical Identification number');\n      throw 'please enter a numerical Identification number';\n    }\n\n    try {\n      const url = await contract.methods.tokenURI(tokenID).call();\n      setUrl(url);\n      console.log(JSON.stringify(url));\n    } catch (error) {\n      setDoesntExist('This Token ID does not exit');\n    }\n  }\n\n  async function configureMetamask() {\n    const provider = await detectEthereumProvider({\n      mustBeMetaMask: true\n    });\n\n    if (provider) {\n      try {\n        await provider.request({\n          method: 'eth_requestAccounts'\n        });\n        await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: '0x3',\n            chainName: 'Ropsten',\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'ETH',\n              decimals: 18\n            },\n            rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n            blockExplorerUrls: ['https://ropsten.etherscan.io']\n          }]\n        });\n      } catch (e) {\n        console.error(e);\n        setConnectionStatus(true);\n      }\n    } else {\n      console.error('Please install MetaMask');\n      alert('Please install the MetaMask wallet extension in Chrome or Brave Browser');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"3.Enter a TokenID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: tokenID,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.column,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"4.Submit Your Metadata and Mint your Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => configureMetamask(),\n            children: \"Connect to Ropsten\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 3\n        }, this), connectionStatus ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"NotConnected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => init(),\n            children: \"Get Account Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Account:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", accounts[0], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 3\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => RetrieveTokenURL(),\n            children: \" check id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Token \", tokenID, \": \", url, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: doesntExist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => Mint(),\n            children: \" Mint Token \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContractInteraction, \"YHsSa9pJIm381NmIzfgyAKX4xe0=\");\n\n_c = ContractInteraction;\nexport default ContractInteraction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractInteraction\");","map":{"version":3,"sources":["/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js"],"names":["React","useState","Component","MusicOwnership","Web3","detectEthereumProvider","styles","UploadMetadata","transferValue","ContractInteraction","props","accounts","setAccounts","web3","setWeb3","undefined","contract","setContract","uri","setUri","tokenID","setTokenID","url","setUrl","doesntExist","setDoesntExist","account","setAccount","connectionStatus","setConnectionStatus","id","setID","cid","setCid","showCIDs","handleSubmit","evt","preventDefault","alert","console","log","handleChange","e","target","value","init","CIDkey","tokenIDs","window","ethereum","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","error","Mint","checkID","methods","tokenURI","call","mint","send","from","gas","RetrieveTokenURL","JSON","stringify","configureMetamask","provider","mustBeMetaMask","request","method","params","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","column"],"mappings":"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","sourcesContent":["import React, {useState,Component} from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\nimport UploadMetadata from \"./UploadMetadata\";\n\nvar transferValue = null; \n\n\n\n  function ContractInteraction (props) {\n    const [accounts, setAccounts] = useState([]); //state variable for accounts\n    const [web3, setWeb3] = useState (undefined); //wbe3 state\n    const [contract, setContract] = useState (undefined); //contract state\n    const [uri, setUri] = useState (undefined); //Uri code State\n    const [tokenID, setTokenID] = useState (undefined); //Token ID state\n    const [url, setUrl] = useState (undefined); //Metadata URL state\n    const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n    const [account, setAccount] = useState(false); //Switch for accounts connection status\n    const [connectionStatus, setConnectionStatus] = useState(false);\n    const [id, setID] = useState(undefined);\n    const [cid, setCid] =useState(props.showCIDs);\n    \n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      alert(`Submitting Name ${tokenID}`)\n      setCid(props.showCIDs);\n      console.log(props.showCIDs);\n      console.log(id);\n    }\n    const handleChange = (e) => {\n    setTokenID(e.target.value)\n    }\n    \n    async function init() {\n             \n      try {\n          const uri = await (props.CIDkey); \n          const tokenID = await (props.tokenIDs);   \n          const  web3 = await new Web3(window.ethereum);\n          const accounts = await  web3.eth.getAccounts();\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = MusicOwnership.networks[networkId];\n          const contract = await new web3.eth.Contract(\n          MusicOwnership.abi,\n          deployedNetwork && deployedNetwork.address\n          );\n          console.log(contract)\n          await setUri(uri);\n          await setTokenID(tokenID);\n          await setWeb3(web3);\n          await setAccounts(accounts);\n          await setContract(contract);\n          console.log(tokenID);\n          console.log(uri);\n          setAccount(true)\n          }\n\n      catch (error) {\n        alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n        console.error(error);\n      }\n    }\n    \n    \n        async function Mint() {\n            if (uri === undefined || tokenID === undefined) {\n                alert('please ensure a file first and that you have entered a numerical Identification number');\n                throw('please ensure a file first and that you have entered a numerical Identification number');\n            }\n            let checkID = await contract.methods.tokenURI(tokenID).call();\n\n              if (checkID =! null)\n            {\n              alert('This ID number has been taken, please try a different number');\n              throw('This ID number has been taken, please try a different number');\n            }\n           \n            await contract.methods.mint(accounts[0],uri,tokenID).send({from:accounts[0], gas: 1000000});\n            }\n    \n            if(typeof web3 !== 'undefined'\n               && typeof accounts !== 'undefined'\n               && typeof contract !== 'undefined') {\n            }\n\n            async function RetrieveTokenURL() {\n            if (tokenID === undefined)\n            {\n              alert('please enter a numerical Identification number');\n              throw('please enter a numerical Identification number');\n            }\n            \n            try{\n               const url = await contract.methods.tokenURI(tokenID).call();\n              setUrl(url);\n              console.log(JSON.stringify(url));\n            }\n            catch(error)\n            {\n            setDoesntExist('This Token ID does not exit');\n            }\n          }\n\n            async function configureMetamask() {\n                const provider = await detectEthereumProvider({\n                  mustBeMetaMask: true\n                })\n                if (provider) {\n                  try {\n                    await provider.request({ method: 'eth_requestAccounts'})\n                    await provider.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [{\n                        chainId: '0x3', \n                        chainName: 'Ropsten',\n                        nativeCurrency: {\n                          name: 'ETH',\n                          symbol: 'ETH',\n                          decimals: 18\n                         },\n                        rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n                        blockExplorerUrls: ['https://ropsten.etherscan.io']\n                      }]\n                    })\n                  } catch(e) {\n                    console.error(e);\n                    setConnectionStatus(true);\n                  }  \n                } else {\n                  console.error('Please install MetaMask');\n                  alert('Please install the MetaMask wallet extension in Chrome or Brave Browser');\n                }\n              }\n                  \n\n  return (\n    <div>\n    <form onSubmit= {handleSubmit}>\n        <h2>3.Enter a TokenID:</h2>\n        <input\n          type=\"number\"\n          value={tokenID}\n          onChange= {handleChange}\n        />\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n\n  <div className={styles.column}>\n        <h2>4.Submit Your Metadata and Mint your Token</h2>\n  <div>\n    \n  <div> <button onClick={() => configureMetamask() }>Connect to Ropsten</button></div>\n  {connectionStatus ? (\n    <div> Connected</div>) : (<p>NotConnected</p>)}\n  <div> <button onClick={() =>  init()}>Get Account Address</button>\n  {account ? (\n  <div>\n  <h3>Account:</h3>\n  <h3> {accounts[0]} </h3>\n  </div>) : (<p></p>)} \n  </div>\n  <div><button onClick = {() => RetrieveTokenURL()}> check id</button></div> \n  <p> Token {tokenID}: {url} </p>\n  <p>{doesntExist}</p>\n\n  <div> <button onClick = {() => Mint()}> Mint Token </button></div>\n\n  </div>\n  <div>\n  </div>\n  </div>\n  </div>\n\n  );\n}\nexport default ContractInteraction"]},"metadata":{},"sourceType":"module"}