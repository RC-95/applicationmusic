{"ast":null,"code":"var _jsxFileName = \"/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContractInteraction(props) {\n  _s();\n\n  const [accounts, setAccounts] = useState([]); //state variable for accounts\n\n  const [web3, setWeb3] = useState(undefined); //wbe3 state\n\n  const [contract, setContract] = useState(undefined); //contract state\n\n  const [uri, setUri] = useState(undefined); //Uri code State\n\n  const [tokenID, setTokenID] = useState(undefined); //Token ID state\n\n  const [url, setUrl] = useState(undefined); //Metadata URL state\n\n  const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n\n  const [account, setAccount] = useState(false); //Switch for accounts connection status\n\n  const [connectionStatus, setConnectionStatus] = useState(false);\n\n  async function init() {\n    try {\n      const uri = await props.CIDkey;\n      const tokenID = await props.tokenIDs;\n      const web3 = await new Web3(window.ethereum);\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = MusicOwnership.networks[networkId];\n      const contract = await new web3.eth.Contract(MusicOwnership.abi, deployedNetwork && deployedNetwork.address);\n      console.log(contract);\n      await setUri(uri);\n      await setTokenID(tokenID);\n      await setWeb3(web3);\n      await setAccounts(accounts);\n      await setContract(contract);\n      console.log(tokenID);\n      console.log(uri);\n      setAccount(true);\n    } catch (error) {\n      alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n      console.error(error);\n    }\n  }\n\n  async function Mint() {\n    if (uri === undefined || tokenID === undefined) {\n      alert('please ensure a file first and that you have entered a numerical Identification number');\n      throw 'please ensure a file first and that you have entered a numerical Identification number';\n    }\n\n    let checkID = await contract.methods.tokenURI(tokenID).call();\n\n    if (checkID = !null) {\n      alert('This ID number has been taken, please try a different number');\n      throw 'This ID number has been taken, please try a different number';\n    }\n\n    await contract.methods.mint(accounts[0], uri, tokenID).send({\n      from: accounts[0],\n      gas: 1000000\n    });\n  }\n\n  if (typeof web3 !== 'undefined' && typeof accounts !== 'undefined' && typeof contract !== 'undefined') {}\n\n  async function RetrieveTokenURL() {\n    if (tokenID === undefined) {\n      alert('please enter a numerical Identification number');\n      throw 'please enter a numerical Identification number';\n    }\n\n    try {\n      const url = await contract.methods.tokenURI(tokenID).call();\n      setUrl(url);\n      console.log(JSON.stringify(url));\n    } catch (error) {\n      setDoesntExist('This Token ID does not exit');\n    }\n  }\n\n  async function configureMetamask() {\n    const provider = await detectEthereumProvider({\n      mustBeMetaMask: true\n    });\n\n    if (provider) {\n      try {\n        await provider.request({\n          method: 'eth_requestAccounts'\n        });\n        await provider.request({\n          method: 'wallet_addEthereumChain',\n          params: [{\n            chainId: '0x3',\n            chainName: 'Ropsten',\n            nativeCurrency: {\n              name: 'ETH',\n              symbol: 'ETH',\n              decimals: 18\n            },\n            rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n            blockExplorerUrls: ['https://ropsten.etherscan.io']\n          }]\n        });\n        setConnectionStatus(true);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      console.error('Please install MetaMask');\n      alert('Please install MetaMask');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.column,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"4.Submit Your Metadata and Mint your Token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => configureMetamask(),\n          children: \"Connect to Ropsten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => init(),\n          children: \"Get Account Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), account ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\" \", accounts[0], \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 3\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Not Connected To MetaMask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => RetrieveTokenURL(),\n          children: \" check id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Token \", tokenID, \": \", url, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: doesntExist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Mint(),\n          children: \" Mint Token \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ContractInteraction, \"+EKZvtcF86+rGLwxloyn/UPR1dQ=\");\n\n_c = ContractInteraction;\nexport default ContractInteraction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractInteraction\");","map":{"version":3,"sources":["/Users/rhysconnolly/SKEEEEET/client/src/components/ContractInteraction.js"],"names":["React","useState","MusicOwnership","Web3","detectEthereumProvider","styles","ContractInteraction","props","accounts","setAccounts","web3","setWeb3","undefined","contract","setContract","uri","setUri","tokenID","setTokenID","url","setUrl","doesntExist","setDoesntExist","account","setAccount","connectionStatus","setConnectionStatus","init","CIDkey","tokenIDs","window","ethereum","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","console","log","error","alert","Mint","checkID","methods","tokenURI","call","mint","send","from","gas","RetrieveTokenURL","JSON","stringify","configureMetamask","provider","mustBeMetaMask","request","method","params","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","e","column"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport MusicOwnership from '../artifacts/MusicOwnership.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport styles from './CSS Modules/FileInputButtons-style.module.css';\n\n\n  function ContractInteraction (props) {\n    const [accounts, setAccounts] = useState([]); //state variable for accounts\n    const [web3, setWeb3] = useState (undefined); //wbe3 state\n    const [contract, setContract] = useState (undefined); //contract state\n    const [uri, setUri] = useState (undefined); //Uri code State\n    const [tokenID, setTokenID] = useState (undefined); //Token ID state\n    const [url, setUrl] = useState (undefined); //Metadata URL state\n    const [doesntExist, setDoesntExist] = useState(undefined); //switch for Token ID response\n    const [account, setAccount] = useState(false); //Switch for accounts connection status\n    const [connectionStatus, setConnectionStatus] = useState(false);\n\n    async function init() {\n             \n      try {\n          const uri = await (props.CIDkey); \n          const tokenID = await (props.tokenIDs);   \n          const  web3 = await new Web3(window.ethereum);\n          const accounts = await  web3.eth.getAccounts();\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = MusicOwnership.networks[networkId];\n          const contract = await new web3.eth.Contract(\n          MusicOwnership.abi,\n          deployedNetwork && deployedNetwork.address\n          );\n          console.log(contract)\n          await setUri(uri);\n          await setTokenID(tokenID);\n          await setWeb3(web3);\n          await setAccounts(accounts);\n          await setContract(contract);\n          console.log(tokenID);\n          console.log(uri);\n          setAccount(true)\n          }\n\n      catch (error) {\n        alert(`Failed to load web3, accounts or contract from the abi. Check console For details.`);\n        console.error(error);\n      }\n    }\n    \n    \n        async function Mint() {\n            if (uri === undefined || tokenID === undefined) {\n                alert('please ensure a file first and that you have entered a numerical Identification number');\n                throw('please ensure a file first and that you have entered a numerical Identification number');\n            }\n            let checkID = await contract.methods.tokenURI(tokenID).call();\n\n              if (checkID =! null)\n            {\n              alert('This ID number has been taken, please try a different number');\n              throw('This ID number has been taken, please try a different number');\n            }\n           \n            await contract.methods.mint(accounts[0],uri,tokenID).send({from:accounts[0], gas: 1000000});\n            }\n    \n            if(typeof web3 !== 'undefined'\n               && typeof accounts !== 'undefined'\n               && typeof contract !== 'undefined') {\n            }\n\n            async function RetrieveTokenURL() {\n            if (tokenID === undefined)\n            {\n              alert('please enter a numerical Identification number');\n              throw('please enter a numerical Identification number');\n            }\n            \n            try{\n               const url = await contract.methods.tokenURI(tokenID).call();\n              setUrl(url);\n              console.log(JSON.stringify(url));\n            }\n            catch(error)\n            {\n            setDoesntExist('This Token ID does not exit');\n            }\n          }\n\n            async function configureMetamask() {\n                const provider = await detectEthereumProvider({\n                  mustBeMetaMask: true\n                })\n                if (provider) {\n                  try {\n                    await provider.request({ method: 'eth_requestAccounts'})\n                    await provider.request({\n                      method: 'wallet_addEthereumChain',\n                      params: [{\n                        chainId: '0x3', \n                        chainName: 'Ropsten',\n                        nativeCurrency: {\n                          name: 'ETH',\n                          symbol: 'ETH',\n                          decimals: 18\n                         },\n                        rpcUrls: ['https://ropsten.infura.io/v3/b3b18fff97b6463ca552f9334d7fe15f'],\n                        blockExplorerUrls: ['https://ropsten.etherscan.io']\n                      }]\n                    })\n                    setConnectionStatus(true);\n                  } catch(e) {\n                    console.error(e);\n                  }  \n                } else {\n                  console.error('Please install MetaMask');\n                  alert('Please install MetaMask');\n                }\n              }\n                  \n\n  return (\n  <div className={styles.column}>\n        <h2>4.Submit Your Metadata and Mint your Token</h2>\n  <div>\n  <div> <button onClick={() => configureMetamask() }>Connect to Ropsten</button></div>\n  <div> <button onClick={() =>  init()}>Get Account Address</button>\n  {account ? (\n  <div>\n  <h3>Account</h3>\n  <p> {accounts[0]} </p>\n  </div>) : (<p>Not Connected To MetaMask</p>)} \n  </div>\n  <div><button onClick = {() => RetrieveTokenURL()}> check id</button></div> \n  <p> Token {tokenID}: {url} </p>\n  <p>{doesntExist}</p>\n\n  <div> <button onClick = {() => Mint()}> Mint Token </button></div>\n\n  </div>\n  <div>\n  </div>\n  </div>\n  );\n}\nexport default ContractInteraction"]},"metadata":{},"sourceType":"module"}